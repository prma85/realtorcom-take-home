{"version":3,"sources":["AppContext.tsx","components/Title.tsx","helpers/index.ts","components/TableRow.tsx","components/TableTitle.tsx","components/Loading.tsx","views/Details.tsx","views/Home.tsx","views/Layout.tsx","views/Profile.tsx","views/NotFound.tsx","App.tsx","index.tsx"],"names":["AppContext","React","site","profile","data","Title","render","console","log","document","title","previousTitle","split","newTitle","length","convertDateToString","d","date","Date","hours","getHours","minutes","getMinutes","ampm","strTime","m","getMonth","getDate","getFullYear","capitalizeFirstLetter","value","charAt","toUpperCase","slice","convertToSentenceCase","result","replace","TableRow","className","to","id","properties","mag","time","TableTitle","desc","onClick","order","Loading","antIcon","LoadingOutlined","style","fontSize","spin","Details","useContext","useParams","item","features","filter","f","prev","prop","map","p","Home","metadata","useState","orderBy","asc","setOrder","list","setList","onClickCol","newList","sort","by","a","b","sortBy","getOrderSymbol","Layout","children","alt","src","logoImage","firstName","propsToShow","index","rowSpan","width","avatarImage","NotFound","App","setData","isLoading","setIsloading","useEffect","fetch","then","json","response","catch","e","error","setTimeout","Provider","path","exact","component","Profile","rootElement","getElementById"],"mappings":"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","file":"static/js/main.96901093.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\nimport { Database } from \"./interfaces/database\";\r\n\r\nconst AppContext = React.createContext<Database>({\r\n  site: {},\r\n  profile: {},\r\n  data: {} \r\n} as Database);\r\n\r\nexport default AppContext;\r\n","import { Fragment } from \"react\";\r\n\r\ninterface TitleProps {\r\n  render: ((prev: string) => string) | string;\r\n}\r\n\r\nconst Title = ({ render }: TitleProps) => {\r\n  console.log(typeof render);\r\n  if (typeof render === \"string\") {\r\n    document.title = render;\r\n  } else if (typeof render === \"function\") {\r\n    const previousTitle = document.title.split(\" - \");\r\n    const newTitle = render(\r\n      previousTitle.length >= 2\r\n        ? previousTitle[previousTitle.length - 1]\r\n        : previousTitle[0]\r\n    );\r\n    document.title = newTitle;\r\n  }\r\n\r\n  return <Fragment />;\r\n};\r\n\r\nexport default Title;\r\n","import { Feature, Properties } from \"../interfaces/database\";\r\n\r\nexport const getMonth = (m: number) => {\r\n  switch (m) {\r\n    case 1:\r\n      return \"Jan\";\r\n    case 2:\r\n      return \"Feb\";\r\n    case 3:\r\n      return \"Mar\";\r\n    case 4:\r\n      return \"Apr\";\r\n    case 5:\r\n      return \"May\";\r\n    case 6:\r\n      return \"Jum\";\r\n    case 7:\r\n      return \"Jul\";\r\n    case 8:\r\n      return \"Aug\";\r\n    case 9:\r\n      return \"Sep\";\r\n    case 10:\r\n      return \"Oct\";\r\n    case 11:\r\n      return \"Nov\";\r\n    case 12:\r\n      return \"Dec\";\r\n    default:\r\n      return 'Invalid Month'\r\n  }\r\n};\r\n\r\nexport const convertDateToString = (d: number) => {\r\n  const date = new Date(d);\r\n  let hours: string | number = date.getHours();\r\n  let minutes: string | number = date.getMinutes();\r\n  const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n\r\n  hours = hours % 12;\r\n  hours = hours ? hours : 12; // the hour '0' should be '12'\r\n  hours = hours < 10 ? `0${hours}` : hours;\r\n  minutes = minutes < 10 ? `0${minutes}` : minutes;\r\n\r\n  const strTime = `${hours}:${minutes} ${ampm}`;\r\n  return `${getMonth(\r\n    date.getMonth() + 1\r\n  )} ${date.getDate()}, ${date.getFullYear()}, ${strTime}`;\r\n};\r\n\r\nexport const sortBy = (by: keyof Properties, asc: boolean) => (\r\n  a: Feature,\r\n  b: Feature\r\n) => {\r\n  if (a.properties[by]! > b.properties[by]!) return asc ? 1 : -1;\r\n  if (a.properties[by]! < b.properties[by]!) return asc ? -1 : 1;\r\n  return 0;\r\n};\r\n\r\nexport const capitalizeFirstLetter = (value: string) => {\r\n  return value.charAt(0).toUpperCase() + value.slice(1);\r\n};\r\n\r\nexport const convertToSentenceCase = (value: string) => {\r\n  const result = value.replace(/([A-Z])/g, \" $1\");\r\n  return capitalizeFirstLetter(result);\r\n};\r\n","import { Feature } from \"../interfaces/database\";\r\nimport { convertDateToString } from \"../helpers\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface TableRowProps {\r\n  data: Feature;\r\n}\r\n\r\nconst TableRow = ({ data }: TableRowProps) => (\r\n  <tr>\r\n    <td className=\"title\">\r\n      <Link\r\n        to={`/details/${data.id}`}\r\n        title={`Details about ${data.properties.title}`}\r\n      >\r\n        {data.properties.title}\r\n      </Link>\r\n    </td>\r\n    <td className=\"mag\">{data.properties.mag}</td>\r\n    <td className=\"time\">{convertDateToString(data.properties.time)}</td>\r\n  </tr>\r\n);\r\n\r\nexport default TableRow;\r\n","import { capitalizeFirstLetter } from \"../helpers\";\r\n\r\nexport type OrderBy = \"title\" | \"mag\" | \"time\";\r\n\r\ninterface TableTitleProps {\r\n  desc?: string;\r\n  title: OrderBy;\r\n  onClick: (v: OrderBy) => void;\r\n  order: (v: OrderBy) => string;\r\n}\r\n\r\nconst TableTitle = ({ desc, title, onClick, order }: TableTitleProps) => (\r\n  <th onClick={() => onClick(title)}>{`${\r\n    desc ? desc : capitalizeFirstLetter(title)\r\n  } ${order(title)}`}</th>\r\n);\r\n\r\nexport default TableTitle;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst Loading = () => {\r\n  const antIcon = <LoadingOutlined style={{ fontSize: 72 }} spin />;\r\n\r\n  return (\r\n    <div id=\"loading\">\r\n      <div className=\"icon\">{antIcon}</div>\r\n      <div style={{ fontSize: 32 }}>Loading...</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useContext } from \"react\";\r\nimport AppContext from \"../AppContext\";\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\nimport { capitalizeFirstLetter, convertDateToString } from \"../helpers\";\r\nimport { Title } from \"../components\";\r\nimport { Properties } from '../interfaces/database';\r\n\r\nconst Details = () => {\r\n  const { data } = useContext(AppContext);\r\n  const { id } = useParams<{ id: string }>();\r\n  const { features } = data;\r\n  const item = features.filter((f) => f.id === id)[0];\r\n\r\n  if (!item) return <Redirect to=\"/404\" />;\r\n\r\n  const propsToShow: Array<{\r\n    prop: keyof Properties,\r\n    desc?: string\r\n  }> = [\r\n    { prop: \"title\" },\r\n    { prop: \"mag\", desc: \"Magnitude\" },\r\n    { prop: \"time\" },\r\n    { prop: \"status\" },\r\n    { prop: \"tsunami\" },\r\n    { prop: \"type\" }\r\n  ];\r\n\r\n  const title = item.properties.title;\r\n\r\n  return (\r\n    <div id=\"view-details\">\r\n      <Title render={(prev) => `${title} - ${prev}`} />\r\n      <h2 className=\"content-title\">{title}</h2>\r\n      <table className=\"details\">\r\n        <caption>{`Details for the ${title}`}</caption>\r\n        <tbody>\r\n          {propsToShow.map((p) => (\r\n            <tr>\r\n              <td className=\"bold\">\r\n                {p.desc ? p.desc : capitalizeFirstLetter(p.prop)}\r\n              </td>\r\n              <td>\r\n                {p.prop === \"time\"\r\n                  ? convertDateToString(item.properties[p.prop])\r\n                  : item.properties[p.prop]}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import { useContext, useState } from \"react\";\r\nimport AppContext from \"../AppContext\";\r\nimport { sortBy } from \"../helpers\";\r\nimport { TableRow, TableTitle, OrderBy } from \"../components\";\r\ninterface Order {\r\n  orderBy: OrderBy;\r\n  asc: boolean;\r\n}\r\n\r\nconst Home = () => {\r\n  const { data } = useContext(AppContext);\r\n  const { metadata, features } = data;\r\n  const { title } = metadata;\r\n\r\n  const [order, setOrder] = useState<Order>({\r\n    orderBy: \"title\",\r\n    asc: true\r\n  });\r\n  const [list, setList] = useState(features);\r\n\r\n  const onClickCol = (orderBy: OrderBy) => {\r\n    const newList = [...list];\r\n    const asc = !order.asc;\r\n    newList.sort(sortBy(orderBy, asc));\r\n    setList(newList);\r\n    setOrder({ orderBy, asc });\r\n  };\r\n\r\n  const getOrderSymbol = (orderBy: OrderBy) => {\r\n    if (orderBy === order.orderBy) return order.asc ? \"⮝\" : \"⮟\";\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <div id=\"view-home\">\r\n      <h2 className=\"content-title\">{title}</h2>\r\n      <table className=\"list\">\r\n        <caption>{`List for the ${title}`}</caption>\r\n        <thead>\r\n          <tr>\r\n            <TableTitle\r\n              title=\"title\"\r\n              onClick={onClickCol}\r\n              order={getOrderSymbol}\r\n            />\r\n            <TableTitle\r\n              title=\"mag\"\r\n              desc=\"Magnitude\"\r\n              onClick={onClickCol}\r\n              order={getOrderSymbol}\r\n            />\r\n            <TableTitle\r\n              title=\"time\"\r\n              onClick={onClickCol}\r\n              order={getOrderSymbol}\r\n            />\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {list.map((item) => (\r\n            <TableRow data={item} />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { ReactNode, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppContext from \"../AppContext\";\r\n\r\ninterface LayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst Layout = ({ children }: LayoutProps) => {\r\n  const { site, profile } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"layout\">\r\n      <div className=\"layout-header\">\r\n        <div className=\"logo\">\r\n          <Link to=\"/\">\r\n            <img alt=\"realtor.com logo\" src={site.logoImage} />\r\n          </Link>\r\n        </div>\r\n        <div className=\"title\">\r\n          <h1>{site.title}</h1>\r\n        </div>\r\n        <div className=\"user\">\r\n          <Link to=\"/profile\">{`Welcome ${profile.firstName}`}</Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"layout-content\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { useContext } from \"react\";\r\nimport AppContext from \"../AppContext\";\r\nimport { convertToSentenceCase } from \"../helpers\";\r\nimport { Profile } from '../interfaces/database';\r\n\r\nconst Details = () => {\r\n  const { profile } = useContext(AppContext);\r\n\r\n  const propsToShow = [\r\n    { prop: \"firstName\" },\r\n    { prop: \"lastName\" },\r\n    { prop: \"phone\" },\r\n    { prop: \"email\" },\r\n    { prop: \"bio\" }\r\n  ];\r\n\r\n  return (\r\n    <div id=\"view-profile\">\r\n      <h2 className=\"content-title\">Profile</h2>\r\n      <table className=\"profile\">\r\n        <caption>{`Details for the ${profile.firstName}`}</caption>\r\n        <tbody>\r\n          {propsToShow.map((p, index) => (\r\n            <tr>\r\n              {index === 0 && (\r\n                <td className=\"avatar\" rowSpan={propsToShow.length}>\r\n                  <img\r\n                    width=\"160\"\r\n                    alt={`${profile.firstName}'s avatar`}\r\n                    src={profile.avatarImage}\r\n                  />\r\n                </td>\r\n              )}\r\n              <td className=\"bold\">{convertToSentenceCase(p.prop)}</td>\r\n              <td>{profile[p.prop as keyof Profile]}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","const NotFound = () => (\r\n  <div className=\"error404\">\r\n    <img\r\n      alt=\"Robot with 404 error BG\"\r\n      className=\"error404__img\"\r\n      src=\"https://www.boostability.com/content/wp-content/uploads/sites/2/2012/10/BOOST_BLOG_IMAGE_RB_SET_10_404_PAGE_1200x628px_v1_3.jpg\"\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default NotFound;","import { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AppContext from \"./AppContext\";\r\nimport { Title, Loading } from \"./components\";\r\nimport { Database } from \"./interfaces/database\";\r\nimport { Details, Home, Profile, Layout, NotFound } from \"./views\";\r\n\r\nexport default function App() {\r\n  const [data, setData] = useState<Database | null>(null);\r\n  const [isLoading, setIsloading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && !data) {\r\n      setIsloading(true);\r\n      fetch(\"/database.json\")\r\n        .then((d) => d.json())\r\n        .then((response) => setData(response as Database))\r\n        .catch((e) => console.error(e))\r\n        .then(() =>\r\n          setTimeout(() => {\r\n            // this is to simulate a call in the real database instead of a local file\r\n            setIsloading(false);\r\n          }, 1000)\r\n        );\r\n    }\r\n  }, [isLoading, data]);\r\n\r\n  return (\r\n    <AppContext.Provider value={data!}>\r\n      {isLoading || !data ? (\r\n        <div id=\"loading\">\r\n          <Title render=\"Loading...\" />\r\n          <Loading />\r\n        </div>\r\n      ) : (\r\n        <Router>\r\n          <Layout>\r\n            <Title render={data?.site.title!} />\r\n            <Switch>\r\n              <Route path=\"/\" exact component={Home} />\r\n              <Route path=\"/profile\" exact component={Profile} />\r\n              <Route path=\"/details/:id\" exact component={Details} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </Layout>\r\n        </Router>\r\n      )}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","import { render } from \"react-dom\";\r\nimport \"./scss/style.scss\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}